# -*- coding: utf-8 -*-
"""
Created on Thu Jul 16 17:20:59 2020

@author: Wenqing Zhong
"""
import sympy as sy
x = sy.symbols('x')


def cal_fprime(f): #get f'(x)  
    fprime= sy.Derivative(f)
    fprime=fprime.doit()
    return fprime
 

    
def cal_minima(f,step_size, Xo):  
    minima=0
    N=[]#all f(x)
    N.append(Xo)    
    fprime=cal_fprime(f)#f'(x)
    print(fprime)
    f2prime=cal_fprime(fprime)#f''(x)
    
    for i in range(10000):
        N.append(N[i]-step_size*fprime.subs({x:N[i]}))#x1=x0-f'(x0)*step_size
        if(N[i]-N[i+1]==0):#when f'(x)=0
            minima=N[i]
            assert(f2prime.subs({x:minima})>0)#make sure f''(x)>0 so x is a local minima
            break   
    return minima

print(cal_minima((x-4)**2+2*sy.exp(x),0.1,0))
